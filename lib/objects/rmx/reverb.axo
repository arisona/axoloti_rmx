<objdefs appVersion="1.0.12">
   <obj.normal id="reverb" uuid="b1ecfd2f-3b0e-4fb2-8375-64770ef075ff">
      <sDescription>Reverb. Adapted from object by Mark Harris, and based on Mutable Instruments code.

http://mutable-instruments.com</sDescription>
      <author>robot_mixeur</author>
      <license>GPL</license>
      <inlets>
         <frac32buffer name="l" description="Left input"/>
         <frac32buffer name="r" description="Right input"/>
         <frac32 name="amount" description="Reverb amount"/>
         <frac32 name="time" description="Time"/>
         <frac32 name="diffusion" description="Diffusion"/>
         <frac32 name="cutoff" description="Low-pass cutoff"/>
         <frac32 name="modEnv" description="Envelope modulation amount"/>
         <frac32 name="env" description="Envelope"/>
      </inlets>
      <outlets>
         <frac32buffer name="l"/>
         <frac32buffer name="r"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <includes>
         <include>./code/rmx_axo_reverb.hpp</include>
      </includes>
      <code.declaration><![CDATA[rmx::Reverb reverb;]]></code.declaration>
      <code.init><![CDATA[static uint16_t buffer[16384] __attribute__ ((section (".sdram")));

reverb.setup(buffer);]]></code.init>
      <code.krate><![CDATA[reverb.process(inlet_l, inlet_r, outlet_l, outlet_r,
			inlet_amount, inlet_time, rmx::ONE, inlet_diffusion, inlet_cutoff, inlet_modEnv, inlet_env);]]></code.krate>
   </obj.normal>
</objdefs>